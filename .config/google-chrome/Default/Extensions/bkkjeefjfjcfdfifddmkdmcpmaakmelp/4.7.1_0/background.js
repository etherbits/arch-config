import { e, r } from './chunks/browser-polyfill-bbb70053.js';
import { l as l$1, r as r$1 } from './chunks/index-c9938791.js';
import { a as a$1 } from './chunks/create-25618b43.js';
import './chunks/transframe-provider-57421007.js';

var i=e=>`notification_job:${e}`,n=/^(http|https):\/\/*/;const a=["app.truffle.vip","truffle.vip"],c=["youtube.com","twitch.tv","patreon.com"];console.log("PRIVILEGED_DOMAINS",a),console.log("MODIFIED_FETCH_DOMAINS",c);const l=e.exports.runtime.getManifest().manifest_version<3,u=new URL(e.exports.runtime.getURL("")).hostname;function d(e$1){const o=e$1.map((e=>e.toLowerCase())),r=e=>{var t;return {requestHeaders:null===(t=e.requestHeaders)||void 0===t?void 0:t.filter((e=>!o.includes(e.name.toLowerCase())))}},s=e=>{var t;return {responseHeaders:null===(t=e.responseHeaders)||void 0===t?void 0:t.filter((e=>!o.includes(e.name.toLowerCase())))}};return e.exports.webRequest.onBeforeSendHeaders.addListener(r,{urls:c.map((e=>`https://*.${e}/*`))},["blocking","requestHeaders"]),e.exports.webRequest.onHeadersReceived.addListener(s,{urls:c.map((e=>`https://*.${e}/*`))},["blocking","responseHeaders"]),()=>{e.exports.webRequest.onBeforeSendHeaders.removeListener(r),e.exports.webRequest.onHeadersReceived.removeListener(s);}}async function m(e){const t=[(o=e,{id:p++,priority:1,action:{type:chrome.declarativeNetRequest.RuleActionType.MODIFY_HEADERS,responseHeaders:o.map((e=>({header:e,operation:chrome.declarativeNetRequest.HeaderOperation.REMOVE}))),requestHeaders:o.map((e=>({header:e,operation:chrome.declarativeNetRequest.HeaderOperation.REMOVE})))},condition:{requestDomains:c,initiatorDomains:[...a,u],resourceTypes:[chrome.declarativeNetRequest.ResourceType.MAIN_FRAME,chrome.declarativeNetRequest.ResourceType.SUB_FRAME,chrome.declarativeNetRequest.ResourceType.XMLHTTPREQUEST]}})];var o;return await chrome.declarativeNetRequest.updateSessionRules({removeRuleIds:t.map((e=>e.id)),addRules:t}),()=>{chrome.declarativeNetRequest.updateSessionRules({removeRuleIds:t.map((e=>e.id))});}}a$1({api:{fetchWithRulesApplied:async(e,t,o,{headersToRemove:r}={})=>{const s=new URL(t),i=s.hostname.split(".").slice(-2).join(".");if(!c.includes(i))throw new Error(`Domain not whitelisted: ${s.hostname}`);let n;r&&(n=l?await d(r):await m(r));const a=fetch(t,o);try{const e=await a;return n&&n(),e.text()}catch(e){throw n&&n(),e}},removeHeaders:async(e,{headers:t,ttlMs:o})=>{try{let e;e=l?await d(t):await m(t),o&&setTimeout((()=>{e();}),o);}catch(e){console.error("Error removing headers",e);}},getCookies:async(e$1,o)=>{if(!["youtube.com","studio.youtube.com","www.youtube.com"].some((e=>o.includes(e))))throw console.error("Domain not whitelisted",o),new Error(`Domain not whitelisted: ${o}`);return await e.exports.cookies.getAll({url:o})}},namespace:"truffle-background-privileged-api-v1"});let p=1;chrome.gcm&&(chrome.runtime.onInstalled.addListener((()=>{chrome.instanceID.getToken({authorizedEntity:"277610744288",scope:"GCM"}).then((t=>{console.log("FCM token",t),r.storage.local.set({fcmToken:t});}));})),chrome.gcm.onMessage.addListener((function(t){if(!chrome.gcm)return;let o="/assets/icon48.png",r$1=t?.data??{},s=r$1.notificationId??r$1.notificationJobId,n={type:"basic",title:r$1.notificationTitle??r$1["gcm.notification.title"]??" ",message:r$1.notificationBody??r$1["gcm.notification.body"]??" ",iconUrl:r$1.notificationIcon??r$1["gcm.notification.icon"]??o};r.storage.local.set({[i(s)]:r$1}),chrome.notifications.create(s,n,(()=>{let e=chrome.runtime.lastError;e&&(console.error("Error displaying notification:",e),n.iconUrl=o,chrome.notifications.create(s,n));}));})),chrome.notifications.onClicked.addListener((async function(t){let o=i(t),r$1=(await r.storage.local.get(o))?.[o];if(r.storage.local.remove(o),!r$1)return;let{action:s}=r$1;s&&n.test(s)&&r.tabs.create({url:s});}))),e.exports.runtime.onInstalled.addListener((async e$1=>{if("install"===e$1.reason){const e$1="https://app.truffle.vip/getting-started?reset=true";await e.exports.tabs.create({url:e$1});}})),e.exports.runtime.setUninstallURL(`https://truffle.vip/extension-survey?version=${e.exports.runtime.getManifest().version}`),e.exports.runtime.onMessageExternal.addListener((async(e,t)=>{if("pmnmpgjfacmjcnfigcmgfipemjpggmeg"!==t.id)return;const s=e.namespace,i=e.key;if(s&&i){if("get"===e.type)return l$1(s,i);if("set"===e.type){if(!e.data)return;return await r$1(s,i,e.data),!0}}}));
